version: '3.8'
services:
  db:
    image: 'postgres'
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
    # volumes:
    #   - db:/var/lib/postgresql/data
    #   - ./db:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"

  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    # command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes: 
      - db:/cache

  rabbitmq3:
    container_name: "rabbitmq"
    image: rabbitmq:3.8-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=myuser
      - RABBITMQ_DEFAULT_PASS=mypassword
    ports:
      # AMQP protocol port
      - '5672:5672'
      # HTTP management UI
      - '15672:15672'
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq

  api:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - cache
      - rabbitmq3
    environment:
      DB_USER: postgres
      DB_PASSWORD: 123456
      REDIS_HOST: cache
      REDIS_PORT: 6379

volumes:
  db:
    driver: local
networks:
  rest_data_api: